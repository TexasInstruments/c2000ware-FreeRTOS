%%{
/*
 *  ======== c2000_freertos_libraries.opt ========
 *  Project options needed for this application's configuration
 *
 *  NOTE, this feature requires software components configured in your
 *  system to correctly indicate their project properties
 *  needed for your specific configuration.  If you find
 *  errors, please report them on TI's E2E forums
 *  (https://e2e.ti.com/) so they can be addressed in a future
 *  release.
 *
 *  This file allows one to portably link applications that use SysConfig
 *  _without_ having to make changes to build rules when moving to a new
 *  device OR when upgrading to a new version of a SysConfig enabled
 *  product.
 *
 *  DO NOT EDIT - This file is generated by the SysConfig tool for the
 *                TI C/C++ toolchain
 */
%%}
%   var currnetSDKProductPath = system.getProducts()[0].path
%   var sdkPath = system.utils.path.join(currnetSDKProductPath + "../../../")
%   sdkPath = sdkPath.replace(new RegExp('\\' + system.utils.path.sep, 'g'), '/')
%
%   var module = system.modules['/kernel/freertos_tool/FREERTOS'];
%   if (module != null)
%   {
%       var instance = module.$instances[0];
%       var freertosPath = instance.freertosPath
%       if (instance.useExternalInstall) {
-I "`freertosPath`\FreeRTOS\Source\portable\ThirdParty\Community-Supported-Ports\CCS\C2000_C28x"
-I "`freertosPath`\FreeRTOS\Source"
-I "`freertosPath`\FreeRTOS\Source\include"
%       } else {
-I "`sdkPath`kernel/FreeRTOS/Source/portable/CCS/C2000_C28x"
-I "`sdkPath`kernel/FreeRTOS/Source/"
-I "`sdkPath`kernel/FreeRTOS/Source/include"
%       }
%   }
%   let keys = Object.keys(system.modules).sort();
%   for (let i = 0; i < keys.length; i++) {
%       let mod = system.modules[keys[i]];
%       //console.log(mod)
%       if (mod.templates && mod.templates.c2000_freertos_opt) {
%           let gen = system.getTemplate(mod.templates.c2000_freertos_opt);
`gen(mod)`
%       }
%   }